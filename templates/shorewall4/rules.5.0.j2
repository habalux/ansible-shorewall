#
# {{ ansible_managed }}
#
######################################################################################################################################################################################################
#ACTION         SOURCE          DEST            PROTO   DEST    SOURCE          ORIGINAL        RATE            USER/   MARK    CONNLIMIT       TIME            HEADERS         SWITCH          HELPER
#                                                       PORT    PORT(S)         DEST            LIMIT           GROUP
?SECTION ALL
{% for __rule in shorewall_rules if __rule.ipv4 and __rule.section|default(None) == 'ALL' %}
{% include "rule_line." + shorewall4_major_version + ".j2" %}
{% endfor %}

?SECTION ESTABLISHED
{% for __rule in shorewall_rules if __rule.ipv4 and __rule.section|default(None) == 'ESTABLISHED' %}
{% include "rule_line." + shorewall4_major_version + ".j2" %}
{% endfor %}

?SECTION RELATED
{% for __rule in shorewall_rules if __rule.ipv4 and __rule.section|default(None) == 'RELATED' %}
{% include "rule_line." + shorewall4_major_version + ".j2" %}
{% endfor %}

?SECTION INVALID
{% for __rule in shorewall_rules if __rule.ipv4 and __rule.section|default(None) == 'INVALID' %}
{% include "rule_line." + shorewall4_major_version + ".j2" %}
{% endfor %}

?SECTION UNTRACKED
{% for __rule in shorewall_rules if __rule.ipv4 and __rule.section|default(None) == 'UNTRACKED' %}
{% include "rule_line." + shorewall4_major_version + ".j2" %}
{% endfor %}

?SECTION NEW
{% for __rule in shorewall_rules if __rule.ipv4 and __rule.section|default('NEW') == 'NEW' %}
{% include "rule_line." + shorewall4_major_version + ".j2" %}
{% endfor %}

#       Don't allow connection pickup from the net
#
Invalid(DROP)   net             all             tcp
#
#       Accept DNS connections from the firewall to the network
#
DNS(ACCEPT)     $FW             net
#
#       Accept SSH connections from the local network for administration
#
SSH(ACCEPT)     loc             $FW
#
#       Allow Ping from the local network
#
Ping(ACCEPT)    loc             $FW

#
# Drop Ping from the "bad" net zone.. and prevent your log from being flooded..
#

Ping(DROP)      net             $FW

ACCEPT          $FW             loc             icmp
ACCEPT          $FW             net             icmp
#
